set(PATH_FFMPEG "")
set(OPT_FFMPEG "no")
# Do not check for ffmpeg if ZM_NO_FFMPEG is on
if(NOT ZM_NO_FFMPEG)
	# avformat (using find_library and find_path)
	find_library(AVFORMAT_LIBRARIES avformat)
	if(AVFORMAT_LIBRARIES)
		set(HAVE_LIBAVFORMAT 1)
		list(APPEND ZM_BIN_LIBS "${AVFORMAT_LIBRARIES}")
		find_path(AVFORMAT_INCLUDE_DIR "libavformat/avformat.h")
		if(AVFORMAT_INCLUDE_DIR)
			include_directories("${AVFORMAT_INCLUDE_DIR}")
			set(CMAKE_REQUIRED_INCLUDES "${AVFORMAT_INCLUDE_DIR}")
		endif(AVFORMAT_INCLUDE_DIR)
		mark_as_advanced(FORCE AVFORMAT_LIBRARIES AVFORMAT_INCLUDE_DIR)
		check_include_file("libavformat/avformat.h" HAVE_LIBAVFORMAT_AVFORMAT_H)
		set(optlibsfound "${optlibsfound} AVFormat")
	else(AVFORMAT_LIBRARIES)
		set(optlibsnotfound "${optlibsnotfound} AVFormat")
	endif(AVFORMAT_LIBRARIES)

	# avcodec (using find_library and find_path)
	find_library(AVCODEC_LIBRARIES avcodec)
	if(AVCODEC_LIBRARIES)
		set(HAVE_LIBAVCODEC 1)
		list(APPEND ZM_BIN_LIBS "${AVCODEC_LIBRARIES}")
		find_path(AVCODEC_INCLUDE_DIR "libavcodec/avcodec.h")
		if(AVCODEC_INCLUDE_DIR)
			include_directories("${AVCODEC_INCLUDE_DIR}")
			set(CMAKE_REQUIRED_INCLUDES "${AVCODEC_INCLUDE_DIR}")
		endif(AVCODEC_INCLUDE_DIR)
		mark_as_advanced(FORCE AVCODEC_LIBRARIES AVCODEC_INCLUDE_DIR)
		check_include_file("libavcodec/avcodec.h" HAVE_LIBAVCODEC_AVCODEC_H)
		set(optlibsfound "${optlibsfound} AVCodec")
	else(AVCODEC_LIBRARIES)
		set(optlibsnotfound "${optlibsnotfound} AVCodec")
	endif(AVCODEC_LIBRARIES)

	# avdevice (using find_library and find_path)
	find_library(AVDEVICE_LIBRARIES avdevice)
	if(AVDEVICE_LIBRARIES)
		set(HAVE_LIBAVDEVICE 1)
		list(APPEND ZM_BIN_LIBS "${AVDEVICE_LIBRARIES}")
		find_path(AVDEVICE_INCLUDE_DIR "libavdevice/avdevice.h")
		if(AVDEVICE_INCLUDE_DIR)
			include_directories("${AVDEVICE_INCLUDE_DIR}")
			set(CMAKE_REQUIRED_INCLUDES "${AVDEVICE_INCLUDE_DIR}")
		endif(AVDEVICE_INCLUDE_DIR)
		mark_as_advanced(FORCE AVDEVICE_LIBRARIES AVDEVICE_INCLUDE_DIR)
		check_include_file("libavdevice/avdevice.h" HAVE_LIBAVDEVICE_AVDEVICE_H)
		set(optlibsfound "${optlibsfound} AVDevice")
	else(AVDEVICE_LIBRARIES)
		set(optlibsnotfound "${optlibsnotfound} AVDevice")
	endif(AVDEVICE_LIBRARIES)

	# avutil (using find_library and find_path)
	find_library(AVUTIL_LIBRARIES avutil)
	if(AVUTIL_LIBRARIES)
		set(HAVE_LIBAVUTIL 1)
		list(APPEND ZM_BIN_LIBS "${AVUTIL_LIBRARIES}")
		find_path(AVUTIL_INCLUDE_DIR "libavutil/avutil.h")
		if(AVUTIL_INCLUDE_DIR)
			include_directories("${AVUTIL_INCLUDE_DIR}")
			set(CMAKE_REQUIRED_INCLUDES "${AVUTIL_INCLUDE_DIR}")
		endif(AVUTIL_INCLUDE_DIR)
		mark_as_advanced(FORCE AVUTIL_LIBRARIES AVUTIL_INCLUDE_DIR)
		check_include_file("libavutil/avutil.h" HAVE_LIBAVUTIL_AVUTIL_H)
		check_include_file("libavutil/mathematics.h" HAVE_LIBAVUTIL_MATHEMATICS_H)
		set(optlibsfound "${optlibsfound} AVUtil")
	else(AVUTIL_LIBRARIES)
		set(optlibsnotfound "${optlibsnotfound} AVUtil")
	endif(AVUTIL_LIBRARIES)

	# swscale (using find_library and find_path)
	find_library(SWSCALE_LIBRARIES swscale)
	if(SWSCALE_LIBRARIES)
		set(HAVE_LIBSWSCALE 1)
		list(APPEND ZM_BIN_LIBS "${SWSCALE_LIBRARIES}")
		find_path(SWSCALE_INCLUDE_DIR "libswscale/swscale.h")
		if(SWSCALE_INCLUDE_DIR)
			include_directories("${SWSCALE_INCLUDE_DIR}")
			set(CMAKE_REQUIRED_INCLUDES "${SWSCALE_INCLUDE_DIR}")
		endif(SWSCALE_INCLUDE_DIR)
		mark_as_advanced(FORCE SWSCALE_LIBRARIES SWSCALE_INCLUDE_DIR)
		check_include_file("libswscale/swscale.h" HAVE_LIBSWSCALE_SWSCALE_H)
		set(optlibsfound "${optlibsfound} SWScale")
	else(SWSCALE_LIBRARIES)
		set(optlibsnotfound "${optlibsnotfound} SWScale")
	endif(SWSCALE_LIBRARIES)

	# Find the path to the ffmpeg executable
	find_program(FFMPEG_EXECUTABLE ffmpeg PATH_SUFFIXES ffmpeg)
	if(FFMPEG_EXECUTABLE)
		set(PATH_FFMPEG "${FFMPEG_EXECUTABLE}")
		set(OPT_FFMPEG "yes")
		mark_as_advanced(FFMPEG_EXECUTABLE)
	endif(FFMPEG_EXECUTABLE)

endif(NOT ZM_NO_FFMPEG)
