#!/bin/sh
#
### BEGIN INIT INFO
# Provides:          zoneminder
# Required-Start:    $local_fs $network $remote_fs
# Required-Stop:     $local_fs $network $remote_fs
# Should-Start:      $NetworkManager
# Should-Stop:       $NetworkManager
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts instance of ZoneMinder
# Description:       starts instance of ZoneMinder using zmpkg.pl script
# processname:       zmpkg.pl
### END INIT INFO

NAME=ZoneMinder
ZM_CONFIG=/etc/zm.conf
PID_FILE=/run/zm
LOCKFILE=/var/lock/subsys/zm

. /lib/lsb/init-functions

loadconf()
{
        if [ -f $ZM_CONFIG ]; then
                . $ZM_CONFIG
        else
                echo "ERROR: $ZM_CONFIG not found."
                return 1
        fi
}

loadconf
command="$ZM_PATH_BIN/zmpkg.pl"

start()
{
        loadconf || return $?
        echo "Waiting 10 seconds ..."
        sleep 10

        #Make sure the directory for our PID folder exists or create one.
        [ ! -d $PID_FILE ] && mkdir -m 774 $PID_FILE && chown $ZM_WEB_USER:$ZM_WEB_GROUP $PID_FILE

        #Make sure the folder for the socks file exists or create one
        GetPath="select Value from Config where Name='ZM_PATH_SOCKS'"
        dbHost=`echo $ZM_DB_HOST | cut -d: -f1`
        dbPort=`echo $ZM_DB_HOST | cut -d: -s -f2`
        if [ "$dbPort" = "" ]
                then
                        ZM_PATH_SOCK=`echo $GetPath | mysql -B -h$ZM_DB_HOST -u$ZM_DB_USER -p$ZM_DB_PASS $ZM_DB_NAME | grep -v '^Value'`
                else
                        ZM_PATH_SOCK=`echo $GetPath | mysql -B -h$dbHost -P$dbPort -u$ZM_DB_USER -p$ZM_DB_PASS $ZM_DB_NAME | grep -v '^Value'`
        fi

        # Make sure the directory for zm socket exists or create one
        [ ! -d $ZM_PATH_SOCK ] && mkdir -m 774 $ZM_PATH_SOCK && chown $ZM_WEB_USER:$ZM_WEB_GROUP $ZM_PATH_SOCK

        echo -n "Starting $NAME : "
        $command start
        RETVAL=$?
        [ $RETVAL = 0 ] && echo "Success" || echo "Failure"
        [ $RETVAL = 0 ] && touch $LOCKFILE
        return $RETVAL
}

stop()
{
        loadconf
        echo -n "Stopping $NAME : "
        $command stop
        RETVAL=$?
        [ $RETVAL = 0 ] && echo "Success" || echo "Failure"
        [ $RETVAL = 0 ] && rm -f $LOCKFILE
        return $RETVAL
}

zmstatus()
{
        loadconf
        result=`$command status`
        if [ "$result" = "running" ]; then
                echo "ZoneMinder is running"
                $ZM_PATH_BIN/zmu -l
                RETVAL=0
        else
                echo "ZoneMinder is stopped"
                RETVAL=1
        fi
}

zmupdate()
{
        if [ -x $ZM_PATH_BIN/zmupdate.pl ]; then
                $ZM_PATH_BIN/zmupdate.pl -f
        fi
}


case "$1" in
        'start')
                start
                ;;
        'stop')
                stop
                ;;
        'restart')
                stop && start
                ;;
        'condrestart')
                loadconf
                result=`$ZM_PATH_BIN/zmdc.pl check`
                if [ "$result" = "running" ]; then
                        $ZM_PATH_BIN/zmdc.pl shutdown > /dev/null
                        rm -f $LOCKFILE
                        start
                fi
                ;;
        'status')
                status httpd
                status mysqld
                zmstatus
                ;;
        *)
                echo "Usage: $0 { start | stop | restart | condrestart | status }"
                RETVAL=1
                ;;
esac
exit $RETVAL